version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

  eureka-server:
    image: uzfido/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_URL=http://admin:${EUREKA_PASSWORD:admin123}@eureka-server:8761/eureka
      - EUREKA_PASSWORD=${EUREKA_PASSWORD:admin123}
    volumes:
      - eureka_logs:/app/EUREKA-SERVER/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

  api-gateway:
    image: uzfido/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_URL=http://admin:${EUREKA_PASSWORD:admin123}@eureka-server:8761/eureka
      - JWT_SECRET=${JWT_SECRET:your-very-long-and-secure-jwt-secret-key-for-hs256}
    volumes:
      - gateway_logs:/app/API-GATEWAY/logs
    depends_on:
      - eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

  auth-service:
    image: uzfido/auth-service:latest
    container_name: auth-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=secret
      - EUREKA_URL=http://admin:${EUREKA_PASSWORD:admin123}@eureka-server:8761/eureka
      - JWT_SECRET=${JWT_SECRET:your-very-long-and-secure-jwt-secret-key-for-hs256}
    volumes:
      - auth_logs:/app/AUTH-SERVICE/logs
    depends_on:
      - postgres
      - eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

  inventory-service:
    image: uzfido/inventory-service:latest
    container_name: inventory-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI=mongodb://admin:secret@mongodb:27017/inventory_db?authSource=admin
      - EUREKA_URL=http://admin:${EUREKA_PASSWORD:admin123}@eureka-server:8761/eureka
    volumes:
      - inventory_logs:/app/INVENTORY-SERVICE/logs
    depends_on:
      - mongodb
      - eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

  notification-service:
    image: uzfido/notification-service:latest
    container_name: notification-service
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI=mongodb://admin:secret@mongodb:27017/notification_db?authSource=admin
      - EUREKA_URL=http://admin:${EUREKA_PASSWORD:admin123}@eureka-server:8761/eureka
      - SPRING_MAIL_HOST=smtp.example.com
      - SPRING_MAIL_PORT=587
      - SPRING_MAIL_USERNAME=${MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${MAIL_PASSWORD}
    volumes:
      - notification_logs:/app/NOTIFICATION-SERVICE/logs
    depends_on:
      - mongodb
      - eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

  order-service:
    image: uzfido/order-service:latest
    container_name: order-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI=mongodb://admin:secret@mongodb:27017/order_db?authSource=admin
      - EUREKA_URL=http://admin:${EUREKA_PASSWORD:admin123}@eureka-server:8761/eureka
    volumes:
      - order_logs:/app/ORDER-SERVICE/logs
    depends_on:
      - mongodb
      - eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

  payment-service:
    image: uzfido/payment-service:latest
    container_name: payment-service
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI=mongodb://admin:secret@mongodb:27017/payment_db?authSource=admin
      - EUREKA_URL=http://admin:${EUREKA_PASSWORD:admin123}@eureka-server:8761/eureka
    volumes:
      - payment_logs:/app/PAYMENT-SERVICE/logs
    depends_on:
      - mongodb
      - eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

  product-service:
    image: uzfido/product-service:latest
    container_name: product-service
    ports:
      - "8087:8087"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI=mongodb://admin:secret@mongodb:27017/product_db?authSource=admin
      - EUREKA_URL=http://admin:${EUREKA_PASSWORD:admin123}@eureka-server:8761/eureka
    volumes:
      - product_logs:/app/PRODUCT-SERVICE/logs
    depends_on:
      - mongodb
      - eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  mongodb_data:
  postgres_data:
  eureka_logs:
  gateway_logs:
  auth_logs:
  inventory_logs:
  notification_logs:
  order_logs:
  payment_logs:
  product_logs: